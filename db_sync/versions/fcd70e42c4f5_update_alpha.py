"""update alpha

Revision ID: fcd70e42c4f5
Revises: 2f07de8f048f
Create Date: 2025-10-22 19:21:28.696917

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "fcd70e42c4f5"
down_revision: Union[str, Sequence[str], None] = "2f07de8f048f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "quants_wqb_alpha",
        sa.Column(
            "pnl_data",
            sa.JSON(),
            server_default=sa.text("(json_object())"),
            nullable=False,
            comment="收益数据",
        ),
    )
    op.drop_column("quants_wqb_alpha", "alpha_hash")
    op.add_column(
        "quants_wqb_alpha_task",
        sa.Column(
            "expression",
            sa.TEXT(),
            server_default="",
            nullable=False,
            comment="alpha 表达式",
        ),
    )
    op.add_column(
        "quants_wqb_alpha_task",
        sa.Column(
            "setting_str",
            sa.VARCHAR(length=511),
            nullable=False,
            comment="参数设置字符串",
        ),
    )
    op.add_column(
        "quants_wqb_alpha_task",
        sa.Column(
            "wqb_simulate_id",
            sa.VARCHAR(length=63),
            nullable=False,
            comment="世坤模拟ID",
        ),
    )
    op.add_column(
        "quants_wqb_alpha_task",
        sa.Column(
            "wqb_alpha_id", sa.VARCHAR(length=63), nullable=False, comment="世坤因子ID"
        ),
    )
    op.add_column(
        "quants_wqb_alpha_task",
        sa.Column(
            "alpha_hash",
            sa.BINARY(length=32),
            sa.Computed(
                "UNHEX(SHA2(CONCAT(expression, setting_str), 256))", persisted=True
            ),
            nullable=True,
            comment="表达式和设置的哈希",
        ),
    )
    op.create_index(
        op.f("ix_quants_wqb_alpha_task_wqb_simulate_id"),
        "quants_wqb_alpha_task",
        ["wqb_simulate_id"],
        unique=False,
    )
    op.create_unique_constraint(None, "quants_wqb_alpha_task", ["wqb_alpha_id"])
    op.create_unique_constraint(None, "quants_wqb_alpha_task", ["alpha_hash"])
    op.drop_column("quants_wqb_alpha_task", "setting_data")
    op.drop_column("quants_wqb_alpha_task", "field_data")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "quants_wqb_alpha_task",
        sa.Column(
            "field_data",
            mysql.LONGTEXT(charset="utf8mb4", collation="utf8mb4_bin"),
            server_default=sa.text("json_object()"),
            nullable=False,
            comment="字段数据",
        ),
    )
    op.add_column(
        "quants_wqb_alpha_task",
        sa.Column(
            "setting_data",
            mysql.LONGTEXT(charset="utf8mb4", collation="utf8mb4_bin"),
            server_default=sa.text("json_object()"),
            nullable=False,
            comment="设置数据",
        ),
    )
    op.drop_constraint(None, "quants_wqb_alpha_task", type_="unique")
    op.drop_constraint(None, "quants_wqb_alpha_task", type_="unique")
    op.drop_index(
        op.f("ix_quants_wqb_alpha_task_wqb_simulate_id"),
        table_name="quants_wqb_alpha_task",
    )
    op.drop_column("quants_wqb_alpha_task", "alpha_hash")
    op.drop_column("quants_wqb_alpha_task", "wqb_alpha_id")
    op.drop_column("quants_wqb_alpha_task", "wqb_simulate_id")
    op.drop_column("quants_wqb_alpha_task", "setting_str")
    op.drop_column("quants_wqb_alpha_task", "expression")
    op.add_column(
        "quants_wqb_alpha",
        sa.Column(
            "alpha_hash",
            sa.BINARY(length=32),
            sa.Computed(
                "(unhex(sha2(concat(`expression`,`setting_str`),256)))", persisted=True
            ),
            nullable=True,
            comment="表达式和设置的哈希",
        ),
    )
    op.drop_column("quants_wqb_alpha", "pnl_data")
    # ### end Alembic commands ###
